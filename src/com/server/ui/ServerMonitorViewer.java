   /*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*  
 * ServerMonitorViewer.java
 *
 
 */
package com.server.ui;

import com.server.history.HistoryFileBean;
import java.util.*;
import com.server.monitor.*;
/**
 *
 * @author Prasad
 */
public class ServerMonitorViewer extends javax.swing.JFrame {

    /** Creates new form ServerMonitorViewer */
    public ServerMonitorViewer() {
         super("Monitor :: Server");
        initComponents();
       
        init();
    }

    private void init(){
        this.hideAllPanels();
        this.myDesktop.moveToFront(this.HomePanel);
        this.HomePanel.setVisible(true);
        Buffer.getInstance().setParent(this);
        com.server.history.HistoryManager.getInstance().setViewer(this);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        myDesktop = new javax.swing.JDesktopPane();
        monitorPanel = new javax.swing.JPanel();
        monitorTabbedPane = new javax.swing.JTabbedPane();
        bufferTab = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bufferMgmtTable = new javax.swing.JTable();
        clientsTab = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        clientsInfoTable = new javax.swing.JTable();
        historyTab = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        historyTable = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        aboutServerPanel = new javax.swing.JPanel();
        serverInfoPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        serverIPLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        serverPortLabel = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        HomePanel = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        myMenuBar = new javax.swing.JMenuBar();
        monitorMenu = new javax.swing.JMenu();
        homeMenuItem = new javax.swing.JMenuItem();
        monitorViewMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        aboutMenu = new javax.swing.JMenu();
        aboutServerMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Form"); // NOI18N

        myDesktop.setName("myDesktop"); // NOI18N

        monitorPanel.setName("monitorPanel"); // NOI18N

        monitorTabbedPane.setName("monitorTabbedPane"); // NOI18N

        bufferTab.setName("bufferTab"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        bufferMgmtTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "File Name", "File Size", "Last user time", "Time in Buffer"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bufferMgmtTable.setName("bufferMgmtTable"); // NOI18N
        jScrollPane1.setViewportView(bufferMgmtTable);

        javax.swing.GroupLayout bufferTabLayout = new javax.swing.GroupLayout(bufferTab);
        bufferTab.setLayout(bufferTabLayout);
        bufferTabLayout.setHorizontalGroup(
            bufferTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 785, Short.MAX_VALUE)
        );
        bufferTabLayout.setVerticalGroup(
            bufferTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
        );

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(fileserver.FileServerApp.class).getContext().getResourceMap(ServerMonitorViewer.class);
        monitorTabbedPane.addTab(resourceMap.getString("bufferTab.TabConstraints.tabTitle"), bufferTab); // NOI18N

        clientsTab.setName("clientsTab"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        clientsInfoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "IP", "Port", "Last Logged Time"
            }
        ));
        clientsInfoTable.setName("clientsInfoTable"); // NOI18N
        jScrollPane2.setViewportView(clientsInfoTable);
        clientsInfoTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("clientsInfoTable.columnModel.title1")); // NOI18N
        clientsInfoTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("clientsInfoTable.columnModel.title2")); // NOI18N
        clientsInfoTable.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("clientsInfoTable.columnModel.title3")); // NOI18N

        javax.swing.GroupLayout clientsTabLayout = new javax.swing.GroupLayout(clientsTab);
        clientsTab.setLayout(clientsTabLayout);
        clientsTabLayout.setHorizontalGroup(
            clientsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 785, Short.MAX_VALUE)
        );
        clientsTabLayout.setVerticalGroup(
            clientsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
        );

        monitorTabbedPane.addTab(resourceMap.getString("clientsTab.TabConstraints.tabTitle"), clientsTab); // NOI18N

        historyTab.setName("historyTab"); // NOI18N

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        historyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "File Name", "Time", "Action taken by", "Action"
            }
        ));
        historyTable.setName("historyTable"); // NOI18N
        jScrollPane3.setViewportView(historyTable);
        historyTable.getColumnModel().getColumn(0).setHeaderValue(resourceMap.getString("historyTable.columnModel.title0")); // NOI18N
        historyTable.getColumnModel().getColumn(1).setHeaderValue(resourceMap.getString("historyTable.columnModel.title1")); // NOI18N
        historyTable.getColumnModel().getColumn(2).setHeaderValue(resourceMap.getString("historyTable.columnModel.title2")); // NOI18N
        historyTable.getColumnModel().getColumn(3).setHeaderValue(resourceMap.getString("historyTable.columnModel.title3")); // NOI18N

        javax.swing.GroupLayout historyTabLayout = new javax.swing.GroupLayout(historyTab);
        historyTab.setLayout(historyTabLayout);
        historyTabLayout.setHorizontalGroup(
            historyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 785, Short.MAX_VALUE)
        );
        historyTabLayout.setVerticalGroup(
            historyTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
        );

        monitorTabbedPane.addTab(resourceMap.getString("historyTab.TabConstraints.tabTitle"), historyTab); // NOI18N

        jPanel7.setBackground(resourceMap.getColor("jPanel7.background")); // NOI18N
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel7.setName("jPanel7"); // NOI18N

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jLabel1)
                .addContainerGap(61, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout monitorPanelLayout = new javax.swing.GroupLayout(monitorPanel);
        monitorPanel.setLayout(monitorPanelLayout);
        monitorPanelLayout.setHorizontalGroup(
            monitorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(monitorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(monitorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(monitorTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 790, Short.MAX_VALUE))
                .addContainerGap())
        );
        monitorPanelLayout.setVerticalGroup(
            monitorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(monitorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(monitorTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        monitorPanel.setBounds(0, 0, 810, 430);
        myDesktop.add(monitorPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        aboutServerPanel.setName("aboutServerPanel"); // NOI18N

        serverInfoPanel.setName("serverInfoPanel"); // NOI18N

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        serverIPLabel.setText(resourceMap.getString("serverIPLabel.text")); // NOI18N
        serverIPLabel.setName("serverIPLabel"); // NOI18N

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        serverPortLabel.setText(resourceMap.getString("serverPortLabel.text")); // NOI18N
        serverPortLabel.setName("serverPortLabel"); // NOI18N

        javax.swing.GroupLayout serverInfoPanelLayout = new javax.swing.GroupLayout(serverInfoPanel);
        serverInfoPanel.setLayout(serverInfoPanelLayout);
        serverInfoPanelLayout.setHorizontalGroup(
            serverInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serverInfoPanelLayout.createSequentialGroup()
                .addGroup(serverInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(serverInfoPanelLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(serverInfoPanelLayout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(serverInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(serverInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(serverPortLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                            .addComponent(serverIPLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(501, Short.MAX_VALUE))
        );
        serverInfoPanelLayout.setVerticalGroup(
            serverInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serverInfoPanelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel4)
                .addGap(33, 33, 33)
                .addGroup(serverInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(serverIPLabel))
                .addGap(18, 18, 18)
                .addGroup(serverInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(serverPortLabel))
                .addContainerGap(190, Short.MAX_VALUE))
        );

        jPanel10.setBackground(resourceMap.getColor("jPanel10.background")); // NOI18N
        jPanel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel10.setName("jPanel10"); // NOI18N

        jLabel7.setFont(resourceMap.getFont("jLabel7.font")); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel7)
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout aboutServerPanelLayout = new javax.swing.GroupLayout(aboutServerPanel);
        aboutServerPanel.setLayout(aboutServerPanelLayout);
        aboutServerPanelLayout.setHorizontalGroup(
            aboutServerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutServerPanelLayout.createSequentialGroup()
                .addGroup(aboutServerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(aboutServerPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(serverInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(aboutServerPanelLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        aboutServerPanelLayout.setVerticalGroup(
            aboutServerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(aboutServerPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(serverInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        aboutServerPanel.setBounds(0, 0, 810, 430);
        myDesktop.add(aboutServerPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        HomePanel.setName("HomePanel"); // NOI18N

        jPanel9.setBackground(resourceMap.getColor("jPanel9.background")); // NOI18N
        jPanel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel9.setName("jPanel9"); // NOI18N

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel3)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(31, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout HomePanelLayout = new javax.swing.GroupLayout(HomePanel);
        HomePanel.setLayout(HomePanelLayout);
        HomePanelLayout.setHorizontalGroup(
            HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomePanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        HomePanelLayout.setVerticalGroup(
            HomePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(338, Short.MAX_VALUE))
        );

        HomePanel.setBounds(0, 0, 810, 430);
        myDesktop.add(HomePanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        myMenuBar.setName("myMenuBar"); // NOI18N

        monitorMenu.setText(resourceMap.getString("monitorMenu.text")); // NOI18N
        monitorMenu.setName("monitorMenu"); // NOI18N

        homeMenuItem.setText(resourceMap.getString("homeMenuItem.text")); // NOI18N
        homeMenuItem.setName("homeMenuItem"); // NOI18N
        homeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeMenuItemActionPerformed(evt);
            }
        });
        monitorMenu.add(homeMenuItem);

        monitorViewMenuItem.setText(resourceMap.getString("monitorViewMenuItem.text")); // NOI18N
        monitorViewMenuItem.setName("monitorViewMenuItem"); // NOI18N
        monitorViewMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monitorViewMenuItemActionPerformed(evt);
            }
        });
        monitorViewMenuItem.addMenuDragMouseListener(new javax.swing.event.MenuDragMouseListener() {
            public void menuDragMouseDragged(javax.swing.event.MenuDragMouseEvent evt) {
            }
            public void menuDragMouseEntered(javax.swing.event.MenuDragMouseEvent evt) {
                monitorViewMenuItemMenuDragMouseEntered(evt);
            }
            public void menuDragMouseExited(javax.swing.event.MenuDragMouseEvent evt) {
            }
            public void menuDragMouseReleased(javax.swing.event.MenuDragMouseEvent evt) {
            }
        });
        monitorMenu.add(monitorViewMenuItem);

        exitMenuItem.setText(resourceMap.getString("exitMenuItem.text")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        monitorMenu.add(exitMenuItem);

        myMenuBar.add(monitorMenu);

        aboutMenu.setText(resourceMap.getString("aboutMenu.text")); // NOI18N
        aboutMenu.setName("aboutMenu"); // NOI18N
        aboutMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuActionPerformed(evt);
            }
        });

        aboutServerMenuItem.setText(resourceMap.getString("aboutServerMenuItem.text")); // NOI18N
        aboutServerMenuItem.setName("aboutServerMenuItem"); // NOI18N
        aboutServerMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutServerMenuItemActionPerformed(evt);
            }
        });
        aboutMenu.add(aboutServerMenuItem);

        myMenuBar.add(aboutMenu);

        setJMenuBar(myMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(myDesktop, javax.swing.GroupLayout.DEFAULT_SIZE, 807, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(myDesktop, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void monitorViewMenuItemMenuDragMouseEntered(javax.swing.event.MenuDragMouseEvent evt) {//GEN-FIRST:event_monitorViewMenuItemMenuDragMouseEntered
        // TODO add your handling code here:
        System.out.println("ok...");
    }//GEN-LAST:event_monitorViewMenuItemMenuDragMouseEntered

    private void monitorViewMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monitorViewMenuItemActionPerformed
        // TODO add your handling code here:
        //        System.out.println("ok...1");
        hideAllPanels();
        myDesktop.moveToFront(this.monitorPanel);
        this.monitorPanel.setVisible(true);
    }//GEN-LAST:event_monitorViewMenuItemActionPerformed

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        // TODO add your handling code here:
        // send a message to all clients
        
        //exit
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void aboutServerMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutServerMenuItemActionPerformed
        // TODO add your handling code here:
        hideAllPanels();
        myDesktop.moveToFront(this.aboutServerPanel);
        this.aboutServerPanel.setVisible(true);
    }//GEN-LAST:event_aboutServerMenuItemActionPerformed

    private void homeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeMenuItemActionPerformed
        // TODO add your handling code here:
        hideAllPanels();
        myDesktop.moveToFront(this.HomePanel);
        this.HomePanel.setVisible(true);
    }//GEN-LAST:event_homeMenuItemActionPerformed

    private void aboutMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aboutMenuActionPerformed

    private void hideAllPanels(){
        myDesktop.moveToBack(this.HomePanel);
        myDesktop.moveToBack(this.monitorPanel);
        myDesktop.moveToBack(this.aboutServerPanel);
        this.HomePanel.setVisible(false);
        this.monitorPanel.setVisible(false);
        this.aboutServerPanel.setVisible(false);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ServerMonitorViewer().setVisible(true);
            }
        });
    }
    private List<ClientInfoBean> currentClients = new ArrayList<ClientInfoBean>();
    public void addNewClient(ClientInfoBean client){
        currentClients.add(0,client);
       
       setClientsModel(new ClientTableModel(currentClients));
        
    }
    private void setClientsModel(ClientTableModel model){
          clientsInfoTable.setModel(model);
    }

    public void setBufferModel(SortedSet<BufferedFileBean> files) {
      //  throw new UnsupportedOperationException("Not yet implemented");
        this.bufferMgmtTable.setModel(new BufferTableModel(files));
    }

    public void setHistoryModel(Vector<HistoryFileBean> files) {
    //    throw new UnsupportedOperationException("Not yet implemented");
        this.historyTable.setModel(new HistoryTableModel(files));
    }
    
    class HistoryTableModel extends javax.swing.table.AbstractTableModel{
        private Vector<HistoryFileBean> files = null;
        public HistoryTableModel(Vector<HistoryFileBean> files){
            this.files = files;
        }
       public String getColumnName(int column){
               switch(column){
                   case 0 : return "File Name";
                   case 1 : return "Time";
                   case 2 : return "User";
                   case 3 : return "Action";
               //    case 3 : return "Time in Buffer";
               }
               return "A";
           }
        public int getRowCount(){
            return files.size();
        }
        public int getColumnCount(){
            return 4;
        }
        public Object getValueAt(int row, int column){
            HistoryFileBean cbean = (HistoryFileBean)files.get(row);
           
            switch(column){
                case 0 : return cbean.getFileName();
                case 1 : return cbean.getTime();
                case 2 : return cbean.getUser();
                case 3 : return cbean.getAction();
            }
            return null;
        }
      }

    class ClientTableModel extends javax.swing.table.AbstractTableModel{
        private List<ClientInfoBean> clients = null;
        public ClientTableModel(List<ClientInfoBean> clients){
            this.clients = clients;
        }
           public String getColumnName(int column){
               switch(column){
                   case 0 : return "IP";
                   case 1 : return "Port";
                   case 2 : return "Last Logged in time";
               }
               return "A";
           }
        public int getRowCount(){
            return clients.size();
        }
        public int getColumnCount(){
            return 3;
        }
        public Object getValueAt(int row, int column){
            ClientInfoBean cbean = (ClientInfoBean)clients.get(row);
           
            switch(column){
                case 0 : return cbean.getIp();
                case 1 : return cbean.getPort();
                case 2 : return cbean.getLastLoggedIn();
            }
            return null;
        }
    }
        
    
      class BufferTableModel extends javax.swing.table.AbstractTableModel{
        private List<BufferedFileBean> files = null;
        public BufferTableModel(List<BufferedFileBean> files){
            this.files = files;
        }
        public BufferTableModel(Set<BufferedFileBean> files){
            this.files = new java.util.ArrayList<BufferedFileBean>(files);
        }
           public String getColumnName(int column){
               switch(column){
                   case 0 : return "File Name";
                   case 1 : return "File Size (KB)";
                   case 2 : return "Last Used Time";
               //    case 3 : return "Time in Buffer";
               }
               return "A";
           }
        public int getRowCount(){
            return files.size();
        }
        public int getColumnCount(){
            return 3;
        }
        public Object getValueAt(int row, int column){
            BufferedFileBean cbean = (BufferedFileBean)files.get(row);
           
            switch(column){
                case 0 : return cbean.getFileName();
                case 1 : return cbean.getFileSize();
                case 2 : return cbean.getLastUsedTime();
            }
            return null;
        }
      }
    public void removeClient(String ip,Integer port){
        Iterator<ClientInfoBean> it = currentClients.iterator();
        ClientInfoBean current = null;
        int index = 0;
           System.out.println("removed client..."+ip+"  "+port);
              
        while(it.hasNext()){
               System.out.println("removed client..."+ip+"  "+port);
              
            current = it.next();
              System.out.println("removed client..."+ip+"  "+port+current.getIp()+current.getPort());
             
            if(current.getIp().equals(ip)&&current.getPort().equals(port))
              {
                System.out.println("removed client..."+ip+"  "+port);
                currentClients.remove(index);
                break;
            }
            index++;
        }
        setClientsModel(new ClientTableModel(currentClients));
    }
    public void setServerInfo(String ip,Integer port){
        serverIPLabel.setText(ip);
        serverPortLabel.setText(port+"");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel HomePanel;
    private javax.swing.JMenu aboutMenu;
    private javax.swing.JMenuItem aboutServerMenuItem;
    private javax.swing.JPanel aboutServerPanel;
    private javax.swing.JTable bufferMgmtTable;
    private javax.swing.JPanel bufferTab;
    private javax.swing.JTable clientsInfoTable;
    private javax.swing.JPanel clientsTab;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JPanel historyTab;
    private javax.swing.JTable historyTable;
    private javax.swing.JMenuItem homeMenuItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JMenu monitorMenu;
    private javax.swing.JPanel monitorPanel;
    private javax.swing.JTabbedPane monitorTabbedPane;
    private javax.swing.JMenuItem monitorViewMenuItem;
    private javax.swing.JDesktopPane myDesktop;
    private javax.swing.JMenuBar myMenuBar;
    private javax.swing.JLabel serverIPLabel;
    private javax.swing.JPanel serverInfoPanel;
    private javax.swing.JLabel serverPortLabel;
    // End of variables declaration//GEN-END:variables
}
